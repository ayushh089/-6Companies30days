class Solution {
public:
    int findAllSubarraysWithGivenSum(vector<int>& arr, int k) {
        // Write Your Code Here
        map<long long, int> mpp;
        long long sum = 0;
        int ms = 0;
        int count = 0;
        for (int i = 0; i < arr.size(); i++) {
            sum = sum + arr[i];
            if (sum == k) {
                ++count;
            }
            long long preSum = sum - k;
            if (mpp.find(preSum) != mpp.end()) {
                count += mpp[preSum];
            }
            ++mpp[sum];
        }
        return count;
    }
    int numberOfSubarrays(vector<int>& nums, int k) {

        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] % 2 == 0) {
                nums[i] = 0;
            } else {
                nums[i] = 1;
            }
        }
        return findAllSubarraysWithGivenSum(nums, k);
    }
};
